<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Login - Zapex</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link href="/css/admin.css" rel="stylesheet">
    <script src="https://www.gstatic.com/firebasejs/10.7.1/firebase-app-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/10.7.1/firebase-auth-compat.js"></script>
</head>
<body class="admin-login">
    <div class="login-container">
        <div class="login-card">
            <div class="login-header">
                <div class="logo">
                    <i class="fas fa-user"></i>
                    <span>Zapex User</span>
                </div>
                <h1>User Login</h1>
                <p>Sign in to access your dashboard</p>
            </div>

            <div class="login-content">
                <div id="login-form">
                    <button id="google-signin-btn" class="google-signin-btn">
                        <i class="fab fa-google"></i>
                        <span>Sign in with Google</span>
                    </button>
                    
                    <div class="login-info">
                        <p><i class="fas fa-info-circle"></i> Access your personal dashboard and analytics.</p>
                    </div>
                </div>

                <div id="loading" class="loading" style="display: none;">
                    <div class="spinner"></div>
                    <p>Verifying credentials...</p>
                </div>

                <div id="error-message" class="error-message" style="display: none;">
                    <i class="fas fa-exclamation-triangle"></i>
                    <span id="error-text"></span>
                </div>
            </div>

            <div class="login-footer">
                <p>&copy; 2024 Zapex. All rights reserved.</p>
                <a href="/" class="back-to-site">
                    <i class="fas fa-arrow-left"></i>
                    Back to Main Site
                </a>
            </div>
        </div>
    </div>

    <script>
        // Firebase configuration
        const firebaseConfig = {
            apiKey: "<%= process.env.FIREBASE_API_KEY %>",
            authDomain: "<%= process.env.FIREBASE_AUTH_DOMAIN %>",
            projectId: "<%= process.env.FIREBASE_PROJECT_ID %>",
            storageBucket: "<%= process.env.FIREBASE_STORAGE_BUCKET %>",
            messagingSenderId: "<%= process.env.FIREBASE_MESSAGING_SENDER_ID %>",
            appId: "<%= process.env.FIREBASE_APP_ID %>"
        };

        // Initialize Firebase
        let auth;
        try {
            firebase.initializeApp(firebaseConfig);
            auth = firebase.auth();
        } catch (error) {
            console.error('Firebase initialization error:', error);
        }

        // Google Sign-In
        const googleSignInBtn = document.getElementById('google-signin-btn');
        const loading = document.getElementById('loading');
        const errorMessage = document.getElementById('error-message');
        const errorText = document.getElementById('error-text');

        googleSignInBtn.addEventListener('click', async () => {
            try {
                loading.style.display = 'block';
                errorMessage.style.display = 'none';

                const provider = new firebase.auth.GoogleAuthProvider();
                const result = await auth.signInWithPopup(provider);
                const user = result.user;

                // Get the ID token
                const idToken = await user.getIdToken();

                // Send token to server for verification
                console.log('Sending token to server...');
                const response = await fetch('/user/verify-token', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ idToken })
                });

                console.log('Server response:', response.status);
                const data = await response.json();
                console.log('Server data:', data);

                if (response.ok) {
                    console.log('Authentication successful, redirecting...');
                    // Redirect to user dashboard
                    window.location.href = '/user/dashboard';
                } else {
                    throw new Error(data.error || 'Authentication failed');
                }

            } catch (error) {
                console.error('Sign-in error:', error);
                errorText.textContent = error.message;
                errorMessage.style.display = 'block';
                loading.style.display = 'none';
            }
        });

        // Check for error parameters in URL
        const urlParams = new URLSearchParams(window.location.search);
        const error = urlParams.get('error');
        
        if (error) {
            let errorMessage = '';
            switch (error) {
                case 'not_found':
                    errorMessage = 'User account not found. Please contact support.';
                    break;
                case 'server_error':
                    errorMessage = 'Server error. Please try again later.';
                    break;
                default:
                    errorMessage = 'An error occurred. Please try again.';
            }
            
            errorText.textContent = errorMessage;
            errorMessage.style.display = 'block';
        }
    </script>
</body>
</html>
